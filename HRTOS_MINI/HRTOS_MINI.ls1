A51 MACRO ASSEMBLER  HRTOS_MINI                                                           12/22/2018 18:13:09 PAGE     1


MACRO ASSEMBLER A51 V8.01
OBJECT MODULE PLACED IN .\HRTOS_MINI.OBJ
ASSEMBLER INVOKED BY: F:\C51\BIN\A51.EXE .\HRTOS_MINI.src PR(.\HRTOS_MINI.ls1) EP DEBUG

LOC  OBJ            LINE     SOURCE

                       1     ; .\HRTOS_MINI.SRC generated from: ..\HRTOS_MINI.c
                       2     ; COMPILER INVOKED BY:
                       3     ;        F:\C51\BIN\C51.EXE ..\HRTOS_MINI.c DEBUG OBJECTEXTEND SRC(.\HRTOS_MINI.SRC)
                       4     
                       5     $nomod51 
                       6     
                       7     NAME    HRTOS_MINI
                       8     
  0080                 9     P0      DATA    080H
  0090                10     P1      DATA    090H
  00A0                11     P2      DATA    0A0H
  00B0                12     P3      DATA    0B0H
  00B4                13     T0      BIT     0B0H.4
  00D6                14     AC      BIT     0D0H.6
  00B5                15     T1      BIT     0B0H.5
  0090                16     T2      BIT     090H.0
  00AF                17     EA      BIT     0A8H.7
  00A8                18     IE      DATA    0A8H
  00CE                19     EXF2    BIT     0C8H.6
  00B7                20     RD      BIT     0B0H.7
  00AC                21     ES      BIT     0A8H.4
  00B8                22     IP      DATA    0B8H
  0098                23     RI      BIT     098H.0
  00B2                24     INT0    BIT     0B0H.2
  00D7                25     CY      BIT     0D0H.7
  0099                26     TI      BIT     098H.1
  00B3                27     INT1    BIT     0B0H.3
  00CB                28     RCAP2H  DATA    0CBH
  00BC                29     PS      BIT     0B8H.4
  0081                30     SP      DATA    081H
  0091                31     T2EX    BIT     090H.1
  00D2                32     OV      BIT     0D0H.2
  00CA                33     RCAP2L  DATA    0CAH
  00C9                34     C_T2    BIT     0C8H.1
  00B6                35     WR      BIT     0B0H.6
  00CD                36     RCLK    BIT     0C8H.5
  00CC                37     TCLK    BIT     0C8H.4
  0099                38     SBUF    DATA    099H
  0087                39     PCON    DATA    087H
  0098                40     SCON    DATA    098H
  0089                41     TMOD    DATA    089H
  0088                42     TCON    DATA    088H
  0089                43     IE0     BIT     088H.1
  008B                44     IE1     BIT     088H.3
  00F0                45     B       DATA    0F0H
  00C8                46     CP_RL2  BIT     0C8H.0
  00E0                47     ACC     DATA    0E0H
  00A9                48     ET0     BIT     0A8H.1
  00AB                49     ET1     BIT     0A8H.3
  008D                50     TF0     BIT     088H.5
  00AD                51     ET2     BIT     0A8H.5
  008F                52     TF1     BIT     088H.7
  00CF                53     TF2     BIT     0C8H.7
  009A                54     RB8     BIT     098H.2
  008C                55     TH0     DATA    08CH
  00A8                56     EX0     BIT     0A8H.0
  0088                57     IT0     BIT     088H.0
  008D                58     TH1     DATA    08DH
A51 MACRO ASSEMBLER  HRTOS_MINI                                                           12/22/2018 18:13:09 PAGE     2

  009B                59     TB8     BIT     098H.3
  00AA                60     EX1     BIT     0A8H.2
  008A                61     IT1     BIT     088H.2
  00CD                62     TH2     DATA    0CDH
  00D0                63     P       BIT     0D0H.0
  009F                64     SM0     BIT     098H.7
  008A                65     TL0     DATA    08AH
  009E                66     SM1     BIT     098H.6
  008B                67     TL1     DATA    08BH
  009D                68     SM2     BIT     098H.5
  00CC                69     TL2     DATA    0CCH
  00B9                70     PT0     BIT     0B8H.1
  00BB                71     PT1     BIT     0B8H.3
  00D3                72     RS0     BIT     0D0H.3
  00BD                73     PT2     BIT     0B8H.5
  008C                74     TR0     BIT     088H.4
  00D4                75     RS1     BIT     0D0H.4
  008E                76     TR1     BIT     088H.6
  00CA                77     TR2     BIT     0C8H.2
  00B8                78     PX0     BIT     0B8H.0
  00BA                79     PX1     BIT     0B8H.2
  0083                80     DPH     DATA    083H
  0082                81     DPL     DATA    082H
  00CB                82     EXEN2   BIT     0C8H.3
  009C                83     REN     BIT     098H.4
  00C8                84     T2CON   DATA    0C8H
  00B0                85     RXD     BIT     0B0H.0
  00B1                86     TXD     BIT     0B0H.1
  00D5                87     F0      BIT     0D0H.5
  00D0                88     PSW     DATA    0D0H
                      89     ?PR?timer0_isr?HRTOS_MINI                SEGMENT CODE 
                      90     ?PR?os_init?HRTOS_MINI                   SEGMENT CODE 
                      91     ?PR?_os_task?HRTOS_MINI                  SEGMENT CODE 
                      92     ?DT?_os_task?HRTOS_MINI                  SEGMENT DATA OVERLAYABLE 
                      93     ?PR?os_start?HRTOS_MINI                  SEGMENT CODE 
                      94     ?CO?HRTOS_MINI       SEGMENT CODE 
                      95     ?DT?HRTOS_MINI       SEGMENT DATA 
                      96     ?BI?HRTOS_MINI       SEGMENT BIT 
                      97             EXTRN   CODE (os_enter_critical)
                      98             EXTRN   CODE (os_exit_critical)
                      99             PUBLIC  os_tcb
                     100             PUBLIC  os_task_stack
                     101             PUBLIC  os_hrtos_stack
                     102             PUBLIC  os_stack
                     103             PUBLIC  os_en_cr_count
                     104             PUBLIC  os_task_rdy_tbl
                     105             PUBLIC  os_hrtos_wait
                     106             PUBLIC  os_task_running_id
                     107             PUBLIC  os_map_tbl
                     108             PUBLIC  os_start
                     109             PUBLIC  _os_task
                     110             PUBLIC  os_init
                     111             PUBLIC  timer0_isr
                     112     
----                 113             RSEG  ?DT?_os_task?HRTOS_MINI
0000                 114     ?_os_task?BYTE:
0000                 115         task_id?242:   DS   1
0001                 116             ORG  1
0001                 117      task_point?243:   DS   2
                     118     
----                 119             RSEG  ?DT?HRTOS_MINI
0000                 120     os_task_running_id:   DS   1
0001                 121     os_task_rdy_tbl:   DS   1
0002                 122      os_en_cr_count:   DS   1
0003                 123            os_stack:   DS   1
0004                 124      os_hrtos_stack:   DS   26
A51 MACRO ASSEMBLER  HRTOS_MINI                                                           12/22/2018 18:13:09 PAGE     3

001E                 125       os_task_stack:   DS   40
0046                 126              os_tcb:   DS   10
                     127     
----                 128             RSEG  ?BI?HRTOS_MINI
0000                 129       os_hrtos_wait:   DBIT   1
                     130     
----                 131             RSEG  ?CO?HRTOS_MINI
0000                 132     os_map_tbl:
0000 01              133             DB      001H
0001 02              134             DB      002H
0002 04              135             DB      004H
0003 08              136             DB      008H
0004 10              137             DB      010H
0005 20              138             DB      020H
0006 40              139             DB      040H
0007 80              140             DB      080H
                     141     
                     142     ; #include <reg52.h>
                     143     ; #include<hrtos_mini.h>
                     144     ; #define OS_ST 9         //±£´æµÄ¶ÑÕ»Ê
                     145     ; unsigned char os_en_cr_count;
                     146     ; unsigned char code os_map_tbl[] = {0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80};
                     147     ; TCB os_tcb[MAX_TASKS];
                     148     ; unsigned char os_task_running_id;//µ±Ç°ÔËÐÐµÄÈÎÎñºÅ
                     149     ; unsigned char os_task_rdy_tbl;//ÈÎÎñ×´Ì¬
                     150     ; unsigned char  os_task_stack[MAX_TASKS][8];//ÈÎÎñ¶ÑÕ»Çø
                     151     ; unsigned char os_hrtos_stack[26];//HRTOS¶ÑÕ»Çø
                     152     ; unsigned char os_stack;//¶ÑÕ»³õÊ¼Öµ
                     153     ; bit os_hrtos_wait;
----                 154     CSEG    AT      0000BH
000B 020000   F      155             LJMP    timer0_isr
                     156     
                     157     ; void timer0_isr(void) interrupt 1
                     158     
----                 159             RSEG  ?PR?timer0_isr?HRTOS_MINI
                     160             USING   0
0000                 161     timer0_isr:
0000 C0E0            162             PUSH    ACC
0002 C0F0            163             PUSH    B
0004 C083            164             PUSH    DPH
0006 C082            165             PUSH    DPL
0008 C0D0            166             PUSH    PSW
000A 75D000          167             MOV     PSW,#00H
000D C000            168             PUSH    AR0
000F C005            169             PUSH    AR5
0011 C006            170             PUSH    AR6
0013 C007            171             PUSH    AR7
                     172             USING   0
                     173                             ; SOURCE LINE # 13
                     174     ;---- Variable 'i?040' assigned to Register 'R7' ----
                     175     ;---- Variable 'j?041' assigned to Register 'R6' ----
                     176     ; {
                     177     ;     unsigned char i,j;
                     178     ;     TF0=0;
                     179                             ; SOURCE LINE # 16
0015 C28D            180             CLR     TF0
                     181     ;       if(os_task_running_id==MAX_TASKS)
                     182                             ; SOURCE LINE # 17
0017 E500     F      183             MOV     A,os_task_running_id
0019 B40506          184             CJNE    A,#05H,?C0001
                     185     ;       {
                     186                             ; SOURCE LINE # 18
                     187     ;               ET0=0;
                     188                             ; SOURCE LINE # 19
001C C2A9            189             CLR     ET0
                     190     ;               i=0;
A51 MACRO ASSEMBLER  HRTOS_MINI                                                           12/22/2018 18:13:09 PAGE     4

                     191                             ; SOURCE LINE # 20
001E 7F00            192             MOV     R7,#00H
                     193     ;               goto OS_HRT;
                     194                             ; SOURCE LINE # 21
0020 807B            195             SJMP    ?timer0_isr?OS_HRT
                     196     ;       }
                     197                             ; SOURCE LINE # 22
0022                 198     ?C0001:
                     199     ;     os_tcb[os_task_running_id].os_task_stack_top=SP;
                     200                             ; SOURCE LINE # 23
0022 E500     F      201             MOV     A,os_task_running_id
0024 25E0            202             ADD     A,ACC
0026 2400     F      203             ADD     A,#LOW (os_tcb+01H)
0028 F8              204             MOV     R0,A
0029 A681            205             MOV     @R0,SP
                     206     ;     j= SP-OS_ST-os_stack;
                     207                             ; SOURCE LINE # 24
002B E581            208             MOV     A,SP
002D 24F7            209             ADD     A,#0F7H
002F C3              210             CLR     C
0030 9500     F      211             SUBB    A,os_stack
0032 FE              212             MOV     R6,A
                     213     ;     if(os_hrtos_wait)
                     214                             ; SOURCE LINE # 25
0033 30001C   F      215             JNB     os_hrtos_wait,?C0003
                     216     ;     {
                     217                             ; SOURCE LINE # 26
                     218     ;         for(i=0; i<MAX_TASKS; i++)
                     219                             ; SOURCE LINE # 27
0036 7F00            220             MOV     R7,#00H
0038                 221     ?C0004:
                     222     ;         {
                     223                             ; SOURCE LINE # 28
                     224     ;             if(os_tcb[i].os_task_wait_tick)
                     225                             ; SOURCE LINE # 29
0038 EF              226             MOV     A,R7
0039 25E0            227             ADD     A,ACC
003B 2400     F      228             ADD     A,#LOW (os_tcb)
003D F8              229             MOV     R0,A
003E E6              230             MOV     A,@R0
003F 600B            231             JZ      ?C0006
                     232     ;             {
                     233                             ; SOURCE LINE # 30
                     234     ;                 os_tcb[i].os_task_wait_tick--;
                     235                             ; SOURCE LINE # 31
0041 16              236             DEC     @R0
                     237     ;                 if(os_tcb[i].os_task_wait_tick == 0)
                     238                             ; SOURCE LINE # 32
0042 E6              239             MOV     A,@R0
0043 7007            240             JNZ     ?C0006
                     241     ;                 {
                     242                             ; SOURCE LINE # 33
                     243     ;                     os_task_rdy_tbl |= os_map_tbl[i];
                     244                             ; SOURCE LINE # 34
0045 EF              245             MOV     A,R7
0046 900000   F      246             MOV     DPTR,#os_map_tbl
0049 93              247             MOVC    A,@A+DPTR
004A 4200     F      248             ORL     os_task_rdy_tbl,A
                     249     ;                 }
                     250                             ; SOURCE LINE # 35
                     251     ;             }
                     252                             ; SOURCE LINE # 36
                     253     ;         }
                     254                             ; SOURCE LINE # 37
004C                 255     ?C0006:
004C 0F              256             INC     R7
A51 MACRO ASSEMBLER  HRTOS_MINI                                                           12/22/2018 18:13:09 PAGE     5

004D BF05E8          257             CJNE    R7,#05H,?C0004
0050 8002            258             SJMP    ?C0009
                     259     ;     }
                     260                             ; SOURCE LINE # 38
0052                 261     ?C0003:
                     262     ;     else { os_hrtos_wait=1; }
                     263                             ; SOURCE LINE # 39
0052 D200     F      264             SETB    os_hrtos_wait
0054                 265     ?C0009:
                     266     ;     for(i=0; i<j; i++)   //±£»¤
                     267                             ; SOURCE LINE # 40
0054 7F00            268             MOV     R7,#00H
0056                 269     ?C0010:
0056 EF              270             MOV     A,R7
0057 C3              271             CLR     C
0058 9E              272             SUBB    A,R6
0059 5015            273             JNC     ?C0011
                     274     ;     {
                     275                             ; SOURCE LINE # 41
                     276     ;         os_task_stack[os_task_running_id][i]=os_hrtos_stack[i];
                     277                             ; SOURCE LINE # 42
005B 7400     F      278             MOV     A,#LOW (os_hrtos_stack)
005D 2F              279             ADD     A,R7
005E F8              280             MOV     R0,A
005F E6              281             MOV     A,@R0
0060 FD              282             MOV     R5,A
0061 E500     F      283             MOV     A,os_task_running_id
0063 75F008          284             MOV     B,#08H
0066 A4              285             MUL     AB
0067 2400     F      286             ADD     A,#LOW (os_task_stack)
0069 2F              287             ADD     A,R7
006A F8              288             MOV     R0,A
006B A605            289             MOV     @R0,AR5
                     290     ;     }
                     291                             ; SOURCE LINE # 43
006D 0F              292             INC     R7
006E 80E6            293             SJMP    ?C0010
0070                 294     ?C0011:
                     295     ;     for (i=os_task_running_id+1; i<MAX_TASKS; i++)//É¸Ñ¡
                     296                             ; SOURCE LINE # 44
0070 E500     F      297             MOV     A,os_task_running_id
0072 04              298             INC     A
0073 FF              299             MOV     R7,A
0074                 300     ?C0013:
0074 EF              301             MOV     A,R7
0075 C3              302             CLR     C
0076 9405            303             SUBB    A,#05H
0078 500C            304             JNC     ?C0014
                     305     ;     {
                     306                             ; SOURCE LINE # 45
                     307     ;         if(os_task_rdy_tbl&os_map_tbl[i])
                     308                             ; SOURCE LINE # 46
007A EF              309             MOV     A,R7
007B 900000   F      310             MOV     DPTR,#os_map_tbl
007E 93              311             MOVC    A,@A+DPTR
007F 5500     F      312             ANL     A,os_task_rdy_tbl
0081 7003            313             JNZ     ?C0014
                     314     ;         {
                     315                             ; SOURCE LINE # 47
                     316     ;             break;
                     317                             ; SOURCE LINE # 48
                     318     ;         }
                     319                             ; SOURCE LINE # 49
0083                 320     ?C0016:
                     321     ;     }
                     322                             ; SOURCE LINE # 50
A51 MACRO ASSEMBLER  HRTOS_MINI                                                           12/22/2018 18:13:09 PAGE     6

0083                 323     ?C0015:
0083 0F              324             INC     R7
0084 80EE            325             SJMP    ?C0013
0086                 326     ?C0014:
                     327     ;     if(i==MAX_TASKS)
                     328                             ; SOURCE LINE # 51
0086 BF0514          329             CJNE    R7,#05H,?timer0_isr?OS_HRT
                     330     ;     {
                     331                             ; SOURCE LINE # 52
                     332     ;               for (i=0; i<=os_task_running_id; i++)
                     333                             ; SOURCE LINE # 53
0089 7F00            334             MOV     R7,#00H
008B                 335     ?C0018:
008B EF              336             MOV     A,R7
008C D3              337             SETB    C
008D 9500     F      338             SUBB    A,os_task_running_id
008F 500C            339             JNC     ?timer0_isr?OS_HRT
                     340     ;         {
                     341                             ; SOURCE LINE # 54
                     342     ;             if(os_task_rdy_tbl&os_map_tbl[i])
                     343                             ; SOURCE LINE # 55
0091 EF              344             MOV     A,R7
0092 900000   F      345             MOV     DPTR,#os_map_tbl
0095 93              346             MOVC    A,@A+DPTR
0096 5500     F      347             ANL     A,os_task_rdy_tbl
0098 7003            348             JNZ     ?timer0_isr?OS_HRT
                     349     ;             {
                     350                             ; SOURCE LINE # 56
                     351     ;                 break;
                     352                             ; SOURCE LINE # 57
                     353     ;             }
                     354                             ; SOURCE LINE # 58
009A                 355     ?C0021:
                     356     ;         }
                     357                             ; SOURCE LINE # 59
009A                 358     ?C0020:
009A 0F              359             INC     R7
009B 80EE            360             SJMP    ?C0018
                     361     ;     }
                     362                             ; SOURCE LINE # 60
                     363     ; OS_HRT:
                     364                             ; SOURCE LINE # 61
009D                 365     ?timer0_isr?OS_HRT:
                     366     ;       os_task_running_id = i;//Ñ¡Ôñ
                     367                             ; SOURCE LINE # 62
009D 8F00     F      368             MOV     os_task_running_id,R7
                     369     ;     j= os_tcb[os_task_running_id].os_task_stack_top-OS_ST-os_stack;
                     370                             ; SOURCE LINE # 63
009F EF              371             MOV     A,R7
00A0 25E0            372             ADD     A,ACC
00A2 2400     F      373             ADD     A,#LOW (os_tcb+01H)
00A4 F8              374             MOV     R0,A
00A5 E6              375             MOV     A,@R0
00A6 24F7            376             ADD     A,#0F7H
00A8 C3              377             CLR     C
00A9 9500     F      378             SUBB    A,os_stack
00AB FE              379             MOV     R6,A
                     380     ;     for(i=0; i<j; i++)   //»Ö¸´
                     381                             ; SOURCE LINE # 64
00AC 7F00            382             MOV     R7,#00H
00AE                 383     ?C0022:
00AE EF              384             MOV     A,R7
00AF C3              385             CLR     C
00B0 9E              386             SUBB    A,R6
00B1 5015            387             JNC     ?C0023
                     388     ;     {
A51 MACRO ASSEMBLER  HRTOS_MINI                                                           12/22/2018 18:13:09 PAGE     7

                     389                             ; SOURCE LINE # 65
                     390     ;         os_hrtos_stack[i]=os_task_stack[os_task_running_id][i];
                     391                             ; SOURCE LINE # 66
00B3 E500     F      392             MOV     A,os_task_running_id
00B5 75F008          393             MOV     B,#08H
00B8 A4              394             MUL     AB
00B9 2400     F      395             ADD     A,#LOW (os_task_stack)
00BB 2F              396             ADD     A,R7
00BC F8              397             MOV     R0,A
00BD E6              398             MOV     A,@R0
00BE FD              399             MOV     R5,A
00BF 7400     F      400             MOV     A,#LOW (os_hrtos_stack)
00C1 2F              401             ADD     A,R7
00C2 F8              402             MOV     R0,A
00C3 A605            403             MOV     @R0,AR5
                     404     ;     }
                     405                             ; SOURCE LINE # 67
00C5 0F              406             INC     R7
00C6 80E6            407             SJMP    ?C0022
00C8                 408     ?C0023:
                     409     ;     SP = os_tcb[os_task_running_id].os_task_stack_top;
                     410                             ; SOURCE LINE # 68
00C8 E500     F      411             MOV     A,os_task_running_id
00CA 25E0            412             ADD     A,ACC
00CC 2400     F      413             ADD     A,#LOW (os_tcb+01H)
00CE F8              414             MOV     R0,A
00CF E6              415             MOV     A,@R0
00D0 F581            416             MOV     SP,A
                     417     ; }
                     418                             ; SOURCE LINE # 69
00D2 D007            419             POP     AR7
00D4 D006            420             POP     AR6
00D6 D005            421             POP     AR5
00D8 D000            422             POP     AR0
00DA D0D0            423             POP     PSW
00DC D082            424             POP     DPL
00DE D083            425             POP     DPH
00E0 D0F0            426             POP     B
00E2 D0E0            427             POP     ACC
00E4 32              428             RETI    
                     429     ; END OF timer0_isr
                     430     
                     431     ; void os_init(void)
                     432     
----                 433             RSEG  ?PR?os_init?HRTOS_MINI
0000                 434     os_init:
                     435                             ; SOURCE LINE # 70
                     436     ; {
                     437                             ; SOURCE LINE # 71
                     438     ;     EA = 0;
                     439                             ; SOURCE LINE # 72
0000 C2AF            440             CLR     EA
                     441     ;     ET0 = 1;
                     442                             ; SOURCE LINE # 73
0002 D2A9            443             SETB    ET0
                     444     ;     TMOD|=0X01;
                     445                             ; SOURCE LINE # 74
0004 438901          446             ORL     TMOD,#01H
                     447     ;     TH0 = 0x00;
                     448                             ; SOURCE LINE # 75
0007 E4              449             CLR     A
0008 F58C            450             MOV     TH0,A
                     451     ;     TL0 = 0x00;
                     452                             ; SOURCE LINE # 76
000A F58A            453             MOV     TL0,A
                     454     ;     os_task_rdy_tbl = 0;
A51 MACRO ASSEMBLER  HRTOS_MINI                                                           12/22/2018 18:13:09 PAGE     8

                     455                             ; SOURCE LINE # 77
000C F500     F      456             MOV     os_task_rdy_tbl,A
                     457     ;     os_stack=(unsigned char)os_hrtos_stack;
                     458                             ; SOURCE LINE # 78
000E 750000   F      459             MOV     os_stack,#LOW (os_hrtos_stack)
                     460     ;       os_stack--;
                     461                             ; SOURCE LINE # 79
0011 1500     F      462             DEC     os_stack
                     463     ;     os_hrtos_wait=1;
                     464                             ; SOURCE LINE # 80
0013 D200     F      465             SETB    os_hrtos_wait
                     466     ;     os_en_cr_count = 0;
                     467                             ; SOURCE LINE # 81
0015 F500     F      468             MOV     os_en_cr_count,A
                     469     ; }
                     470                             ; SOURCE LINE # 82
0017 22              471             RET     
                     472     ; END OF os_init
                     473     
                     474     ; void os_task(unsigned char task_id ,unsigned int task_point)
                     475     
----                 476             RSEG  ?PR?_os_task?HRTOS_MINI
0000                 477     _os_task:
                     478             USING   0
                     479                             ; SOURCE LINE # 83
0000 8F00     F      480             MOV     task_id?242,R7
0002 8C00     F      481             MOV     task_point?243,R4
0004 8D00     F      482             MOV     task_point?243+01H,R5
                     483     ; {
                     484                             ; SOURCE LINE # 84
                     485     ;     os_enter_critical();
                     486                             ; SOURCE LINE # 85
0006 120000   F      487             LCALL   os_enter_critical
                     488     ;     os_task_stack[task_id][0] = task_point;//µØÖ·
                     489                             ; SOURCE LINE # 86
0009 E500     F      490             MOV     A,task_id?242
000B 75F008          491             MOV     B,#08H
000E A4              492             MUL     AB
000F 2400     F      493             ADD     A,#LOW (os_task_stack)
0011 F8              494             MOV     R0,A
0012 A600     F      495             MOV     @R0,task_point?243+01H
                     496     ;     os_task_stack[task_id][1] = task_point>>8;
                     497                             ; SOURCE LINE # 87
0014 E500     F      498             MOV     A,task_point?243
0016 FF              499             MOV     R7,A
0017 E500     F      500             MOV     A,task_id?242
0019 75F008          501             MOV     B,#08H
001C A4              502             MUL     AB
001D 2400     F      503             ADD     A,#LOW (os_task_stack+01H)
001F F8              504             MOV     R0,A
0020 A607            505             MOV     @R0,AR7
                     506     ;     os_tcb[task_id].os_task_stack_top = os_stack+11;
                     507                             ; SOURCE LINE # 88
0022 E500     F      508             MOV     A,os_stack
0024 240B            509             ADD     A,#0BH
0026 FF              510             MOV     R7,A
0027 E500     F      511             MOV     A,task_id?242
0029 25E0            512             ADD     A,ACC
002B 2400     F      513             ADD     A,#LOW (os_tcb+01H)
002D F8              514             MOV     R0,A
002E A607            515             MOV     @R0,AR7
                     516     ;     os_task_rdy_tbl |= os_map_tbl[task_id];//ÉúÐ§
                     517                             ; SOURCE LINE # 89
0030 E500     F      518             MOV     A,task_id?242
0032 900000   F      519             MOV     DPTR,#os_map_tbl
0035 93              520             MOVC    A,@A+DPTR
A51 MACRO ASSEMBLER  HRTOS_MINI                                                           12/22/2018 18:13:09 PAGE     9

0036 4200     F      521             ORL     os_task_rdy_tbl,A
                     522     ;     os_tcb[task_id].os_task_wait_tick = 0; //ÑÓÊ±
                     523                             ; SOURCE LINE # 90
0038 E500     F      524             MOV     A,task_id?242
003A 25E0            525             ADD     A,ACC
003C 2400     F      526             ADD     A,#LOW (os_tcb)
003E F8              527             MOV     R0,A
003F E4              528             CLR     A
0040 F6              529             MOV     @R0,A
                     530     ;     os_exit_critical();
                     531                             ; SOURCE LINE # 91
0041 020000   F      532             LJMP    os_exit_critical
                     533     ; END OF _os_task
                     534     
                     535     ; }
                     536     ; void os_start(void)
                     537     
----                 538             RSEG  ?PR?os_start?HRTOS_MINI
0000                 539     os_start:
                     540                             ; SOURCE LINE # 93
                     541     ; {
                     542                             ; SOURCE LINE # 94
                     543     ;     os_task_running_id = MAX_TASKS;
                     544                             ; SOURCE LINE # 95
0000 750005   F      545             MOV     os_task_running_id,#05H
                     546     ;     os_hrtos_stack[0]=os_task_stack[0][0];
                     547                             ; SOURCE LINE # 96
0003 850000   F      548             MOV     os_hrtos_stack,os_task_stack
                     549     ;     os_hrtos_stack[1]=os_task_stack[0][1];
                     550                             ; SOURCE LINE # 97
0006 850000   F      551             MOV     os_hrtos_stack+01H,os_task_stack+01H
                     552     ;     EA = 1;
                     553                             ; SOURCE LINE # 98
0009 D2AF            554             SETB    EA
                     555     ;     TR0 = 1;
                     556                             ; SOURCE LINE # 99
000B D28C            557             SETB    TR0
                     558     ; }
                     559                             ; SOURCE LINE # 100
000D 22              560             RET     
                     561     ; END OF os_start
                     562     
                     563             END
A51 MACRO ASSEMBLER  HRTOS_MINI                                                           12/22/2018 18:13:09 PAGE    10

SYMBOL TABLE LISTING
------ ----- -------


N A M E                    T Y P E  V A L U E   ATTRIBUTES

?BI?HRTOS_MINI. . . . . .  B SEG    0001H       REL=UNIT
?C0001. . . . . . . . . .  C ADDR   0022H   R   SEG=?PR?TIMER0_ISR?HRTOS_MINI
?C0003. . . . . . . . . .  C ADDR   0052H   R   SEG=?PR?TIMER0_ISR?HRTOS_MINI
?C0004. . . . . . . . . .  C ADDR   0038H   R   SEG=?PR?TIMER0_ISR?HRTOS_MINI
?C0006. . . . . . . . . .  C ADDR   004CH   R   SEG=?PR?TIMER0_ISR?HRTOS_MINI
?C0009. . . . . . . . . .  C ADDR   0054H   R   SEG=?PR?TIMER0_ISR?HRTOS_MINI
?C0010. . . . . . . . . .  C ADDR   0056H   R   SEG=?PR?TIMER0_ISR?HRTOS_MINI
?C0011. . . . . . . . . .  C ADDR   0070H   R   SEG=?PR?TIMER0_ISR?HRTOS_MINI
?C0013. . . . . . . . . .  C ADDR   0074H   R   SEG=?PR?TIMER0_ISR?HRTOS_MINI
?C0014. . . . . . . . . .  C ADDR   0086H   R   SEG=?PR?TIMER0_ISR?HRTOS_MINI
?C0015. . . . . . . . . .  C ADDR   0083H   R   SEG=?PR?TIMER0_ISR?HRTOS_MINI
?C0016. . . . . . . . . .  C ADDR   0083H   R   SEG=?PR?TIMER0_ISR?HRTOS_MINI
?C0018. . . . . . . . . .  C ADDR   008BH   R   SEG=?PR?TIMER0_ISR?HRTOS_MINI
?C0020. . . . . . . . . .  C ADDR   009AH   R   SEG=?PR?TIMER0_ISR?HRTOS_MINI
?C0021. . . . . . . . . .  C ADDR   009AH   R   SEG=?PR?TIMER0_ISR?HRTOS_MINI
?C0022. . . . . . . . . .  C ADDR   00AEH   R   SEG=?PR?TIMER0_ISR?HRTOS_MINI
?C0023. . . . . . . . . .  C ADDR   00C8H   R   SEG=?PR?TIMER0_ISR?HRTOS_MINI
?CO?HRTOS_MINI. . . . . .  C SEG    0008H       REL=UNIT
?DT?HRTOS_MINI. . . . . .  D SEG    0050H       REL=UNIT
?DT?_OS_TASK?HRTOS_MINI .  D SEG    0003H       REL=UNIT
?PR?OS_INIT?HRTOS_MINI. .  C SEG    0018H       REL=UNIT
?PR?OS_START?HRTOS_MINI .  C SEG    000EH       REL=UNIT
?PR?TIMER0_ISR?HRTOS_MINI  C SEG    00E5H       REL=UNIT
?PR?_OS_TASK?HRTOS_MINI .  C SEG    0044H       REL=UNIT
?TIMER0_ISR?OS_HRT. . . .  C ADDR   009DH   R   SEG=?PR?TIMER0_ISR?HRTOS_MINI
?_OS_TASK?BYTE. . . . . .  D ADDR   0000H   R   SEG=?DT?_OS_TASK?HRTOS_MINI
AC. . . . . . . . . . . .  B ADDR   00D0H.6 A   
ACC . . . . . . . . . . .  D ADDR   00E0H   A   
AR0 . . . . . . . . . . .  D ADDR   0000H   A   
AR5 . . . . . . . . . . .  D ADDR   0005H   A   
AR6 . . . . . . . . . . .  D ADDR   0006H   A   
AR7 . . . . . . . . . . .  D ADDR   0007H   A   
B . . . . . . . . . . . .  D ADDR   00F0H   A   
CP_RL2. . . . . . . . . .  B ADDR   00C8H.0 A   
CY. . . . . . . . . . . .  B ADDR   00D0H.7 A   
C_T2. . . . . . . . . . .  B ADDR   00C8H.1 A   
DPH . . . . . . . . . . .  D ADDR   0083H   A   
DPL . . . . . . . . . . .  D ADDR   0082H   A   
EA. . . . . . . . . . . .  B ADDR   00A8H.7 A   
ES. . . . . . . . . . . .  B ADDR   00A8H.4 A   
ET0 . . . . . . . . . . .  B ADDR   00A8H.1 A   
ET1 . . . . . . . . . . .  B ADDR   00A8H.3 A   
ET2 . . . . . . . . . . .  B ADDR   00A8H.5 A   
EX0 . . . . . . . . . . .  B ADDR   00A8H.0 A   
EX1 . . . . . . . . . . .  B ADDR   00A8H.2 A   
EXEN2 . . . . . . . . . .  B ADDR   00C8H.3 A   
EXF2. . . . . . . . . . .  B ADDR   00C8H.6 A   
F0. . . . . . . . . . . .  B ADDR   00D0H.5 A   
HRTOS_MINI. . . . . . . .  N NUMB   -----       
IE. . . . . . . . . . . .  D ADDR   00A8H   A   
IE0 . . . . . . . . . . .  B ADDR   0088H.1 A   
IE1 . . . . . . . . . . .  B ADDR   0088H.3 A   
INT0. . . . . . . . . . .  B ADDR   00B0H.2 A   
INT1. . . . . . . . . . .  B ADDR   00B0H.3 A   
IP. . . . . . . . . . . .  D ADDR   00B8H   A   
IT0 . . . . . . . . . . .  B ADDR   0088H.0 A   
IT1 . . . . . . . . . . .  B ADDR   0088H.2 A   
OS_ENTER_CRITICAL . . . .  C ADDR   -----       EXT
OS_EN_CR_COUNT. . . . . .  D ADDR   0002H   R   SEG=?DT?HRTOS_MINI
OS_EXIT_CRITICAL. . . . .  C ADDR   -----       EXT
A51 MACRO ASSEMBLER  HRTOS_MINI                                                           12/22/2018 18:13:09 PAGE    11

OS_HRTOS_STACK. . . . . .  D ADDR   0004H   R   SEG=?DT?HRTOS_MINI
OS_HRTOS_WAIT . . . . . .  B ADDR   0000H.0 R   SEG=?BI?HRTOS_MINI
OS_INIT . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?OS_INIT?HRTOS_MINI
OS_MAP_TBL. . . . . . . .  C ADDR   0000H   R   SEG=?CO?HRTOS_MINI
OS_STACK. . . . . . . . .  D ADDR   0003H   R   SEG=?DT?HRTOS_MINI
OS_START. . . . . . . . .  C ADDR   0000H   R   SEG=?PR?OS_START?HRTOS_MINI
OS_TASK_RDY_TBL . . . . .  D ADDR   0001H   R   SEG=?DT?HRTOS_MINI
OS_TASK_RUNNING_ID. . . .  D ADDR   0000H   R   SEG=?DT?HRTOS_MINI
OS_TASK_STACK . . . . . .  D ADDR   001EH   R   SEG=?DT?HRTOS_MINI
OS_TCB. . . . . . . . . .  D ADDR   0046H   R   SEG=?DT?HRTOS_MINI
OV. . . . . . . . . . . .  B ADDR   00D0H.2 A   
P . . . . . . . . . . . .  B ADDR   00D0H.0 A   
P0. . . . . . . . . . . .  D ADDR   0080H   A   
P1. . . . . . . . . . . .  D ADDR   0090H   A   
P2. . . . . . . . . . . .  D ADDR   00A0H   A   
P3. . . . . . . . . . . .  D ADDR   00B0H   A   
PCON. . . . . . . . . . .  D ADDR   0087H   A   
PS. . . . . . . . . . . .  B ADDR   00B8H.4 A   
PSW . . . . . . . . . . .  D ADDR   00D0H   A   
PT0 . . . . . . . . . . .  B ADDR   00B8H.1 A   
PT1 . . . . . . . . . . .  B ADDR   00B8H.3 A   
PT2 . . . . . . . . . . .  B ADDR   00B8H.5 A   
PX0 . . . . . . . . . . .  B ADDR   00B8H.0 A   
PX1 . . . . . . . . . . .  B ADDR   00B8H.2 A   
RB8 . . . . . . . . . . .  B ADDR   0098H.2 A   
RCAP2H. . . . . . . . . .  D ADDR   00CBH   A   
RCAP2L. . . . . . . . . .  D ADDR   00CAH   A   
RCLK. . . . . . . . . . .  B ADDR   00C8H.5 A   
RD. . . . . . . . . . . .  B ADDR   00B0H.7 A   
REN . . . . . . . . . . .  B ADDR   0098H.4 A   
RI. . . . . . . . . . . .  B ADDR   0098H.0 A   
RS0 . . . . . . . . . . .  B ADDR   00D0H.3 A   
RS1 . . . . . . . . . . .  B ADDR   00D0H.4 A   
RXD . . . . . . . . . . .  B ADDR   00B0H.0 A   
SBUF. . . . . . . . . . .  D ADDR   0099H   A   
SCON. . . . . . . . . . .  D ADDR   0098H   A   
SM0 . . . . . . . . . . .  B ADDR   0098H.7 A   
SM1 . . . . . . . . . . .  B ADDR   0098H.6 A   
SM2 . . . . . . . . . . .  B ADDR   0098H.5 A   
SP. . . . . . . . . . . .  D ADDR   0081H   A   
T0. . . . . . . . . . . .  B ADDR   00B0H.4 A   
T1. . . . . . . . . . . .  B ADDR   00B0H.5 A   
T2. . . . . . . . . . . .  B ADDR   0090H.0 A   
T2CON . . . . . . . . . .  D ADDR   00C8H   A   
T2EX. . . . . . . . . . .  B ADDR   0090H.1 A   
TASK_ID?242 . . . . . . .  D ADDR   0000H   R   SEG=?DT?_OS_TASK?HRTOS_MINI
TASK_POINT?243. . . . . .  D ADDR   0001H   R   SEG=?DT?_OS_TASK?HRTOS_MINI
TB8 . . . . . . . . . . .  B ADDR   0098H.3 A   
TCLK. . . . . . . . . . .  B ADDR   00C8H.4 A   
TCON. . . . . . . . . . .  D ADDR   0088H   A   
TF0 . . . . . . . . . . .  B ADDR   0088H.5 A   
TF1 . . . . . . . . . . .  B ADDR   0088H.7 A   
TF2 . . . . . . . . . . .  B ADDR   00C8H.7 A   
TH0 . . . . . . . . . . .  D ADDR   008CH   A   
TH1 . . . . . . . . . . .  D ADDR   008DH   A   
TH2 . . . . . . . . . . .  D ADDR   00CDH   A   
TI. . . . . . . . . . . .  B ADDR   0098H.1 A   
TIMER0_ISR. . . . . . . .  C ADDR   0000H   R   SEG=?PR?TIMER0_ISR?HRTOS_MINI
TL0 . . . . . . . . . . .  D ADDR   008AH   A   
TL1 . . . . . . . . . . .  D ADDR   008BH   A   
TL2 . . . . . . . . . . .  D ADDR   00CCH   A   
TMOD. . . . . . . . . . .  D ADDR   0089H   A   
TR0 . . . . . . . . . . .  B ADDR   0088H.4 A   
TR1 . . . . . . . . . . .  B ADDR   0088H.6 A   
TR2 . . . . . . . . . . .  B ADDR   00C8H.2 A   
TXD . . . . . . . . . . .  B ADDR   00B0H.1 A   
A51 MACRO ASSEMBLER  HRTOS_MINI                                                           12/22/2018 18:13:09 PAGE    12

WR. . . . . . . . . . . .  B ADDR   00B0H.6 A   
_OS_TASK. . . . . . . . .  C ADDR   0000H   R   SEG=?PR?_OS_TASK?HRTOS_MINI


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
